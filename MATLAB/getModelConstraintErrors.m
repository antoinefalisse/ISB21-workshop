% This functions returns a CasADi function, which can be called when
% solving the NLP to compute the model constraint errors.

function f_getModelConstraintErrors = getModelConstraintErrors(...
    m1, m2, m3, m4, m5, ...
    I1, I2, I3, I4, I5, ...
    d1, d2, d3, d4, d5, ...
    l1, l2, l4, l5, ...
    g)

    import casadi.*

    % CasADi variables.
    % Segment angles.
    q1_MX = MX.sym('q1_MX',1);      q2_MX = MX.sym('q2_MX',1);      
    q3_MX = MX.sym('q3_MX',1);      q4_MX = MX.sym('q4_MX',1); 
    q5_MX = MX.sym('q5_MX',1);
    % Segment angular velocities.
    dq1_MX = MX.sym('dq1_MX',1);    dq2_MX = MX.sym('dq2_MX',1);    
    dq3_MX = MX.sym('dq3_MX',1);    dq4_MX = MX.sym('dq4_MX',1); 
    dq5_MX = MX.sym('dq5_MX',1);
    % Segment angular accelerations.
    ddq1_MX = MX.sym('ddq1_MX',1);  ddq2_MX = MX.sym('ddq2_MX',1);  
    ddq3_MX = MX.sym('ddq3_MX',1);  ddq4_MX = MX.sym('ddq4_MX',1); 
    ddq5_MX = MX.sym('ddq5_MX',1);
    % Joint torques.
    T1_MX = MX.sym('T1_MX',1);      T2_MX = MX.sym('T2_MX',1);     
    T3_MX = MX.sym('T3_MX',1);      T4_MX = MX.sym('T4_MX',1); 
    T5_MX = MX.sym('T5_MX',1);
    
    % The equations of motion were described symbolically.
    constraintErrors = getSystemDynamics(...
        I1,I2,I3,I4,I5,...
        T1_MX,T2_MX,T3_MX,T4_MX,T5_MX,...
        d1,d2,d3,d4,d5,...
        ddq1_MX,ddq2_MX,ddq3_MX,ddq4_MX,ddq5_MX,...
        dq1_MX,dq2_MX,dq3_MX,dq4_MX,dq5_MX,...
        g,...
        l1,l2,l4,l5,...
        m1,m2,m3,m4,m5,...
        q1_MX,q2_MX,q3_MX,q4_MX,q5_MX);
    
    % CasADi function describing implicitly the model constraint errors.
    % f(q, dq, ddq, T) == 0.
    f_getModelConstraintErrors = Function(...
        'f_getModelConstraintErrors',{...
        q1_MX,q2_MX,q3_MX,q4_MX,q5_MX,...
        dq1_MX,dq2_MX,dq3_MX,dq4_MX,dq5_MX,...
        ddq1_MX,ddq2_MX,ddq3_MX,ddq4_MX,ddq5_MX ,...
        T1_MX,T2_MX,T3_MX,T4_MX,T5_MX},{constraintErrors});
